diff -Npru a/src/r8168.h b/src/r8168.h
--- a/src/r8168.h	2018-06-12 13:58:56.000000000 -0400
+++ b/src/r8168.h	2018-09-07 08:44:57.107503367 -0400
@@ -44,7 +44,7 @@
 #define device_set_wakeup_enable(dev, val)	do {} while (0)
 #endif
 
-#if LINUX_VERSION_CODE < KERNEL_VERSION(3,14,0)
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,14,0) && RHEL_MAJOR != 6
 static inline void ether_addr_copy(u8 *dst, const u8 *src)
 {
         u16 *a = (u16 *)dst;
@@ -54,7 +54,7 @@ static inline void ether_addr_copy(u8 *d
         a[1] = b[1];
         a[2] = b[2];
 }
-#endif
+#endif /* if LINUX_VERSION_CODE < KERNEL_VERSION(3,14,0) && RHEL_MAJOR != 6 */
 
 #if LINUX_VERSION_CODE < KERNEL_VERSION(3,15,0)
 #define IS_ERR_OR_NULL(ptr)			(!ptr)
@@ -80,7 +80,7 @@ static inline bool pm_runtime_active(str
 #endif
 #if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,36)
 #define queue_delayed_work(long_wq, work, delay)	schedule_delayed_work(work, delay)
-#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,34)
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,34) && RHEL_MAJOR != 6
 #define netif_printk(priv, type, level, netdev, fmt, args...)	\
 	do {								\
 		if (netif_msg_##type(priv))				\
@@ -101,7 +101,7 @@ static inline bool pm_runtime_active(str
 		netif_printk(priv, type, KERN_NOTICE, netdev, fmt, ##args)
 #define netif_info(priv, type, netdev, fmt, args...)		\
 		netif_printk(priv, type, KERN_INFO, (netdev), fmt, ##args)
-#endif
+#endif /* if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,34) && RHEL_MAJOR != 6 */
 #endif
 #endif
 #endif
diff -Npru a/src/r8168_n.c b/src/r8168_n.c
--- a/src/r8168_n.c	2018-06-12 13:58:56.000000000 -0400
+++ b/src/r8168_n.c	2018-09-07 08:51:12.429955437 -0400
@@ -506,6 +506,7 @@ bool ethtool_convert_link_mode_to_legacy
 #define LPA_1000HALF            0x0400
 #endif
 
+#if RHEL_MAJOR != 6
 static inline u32 mii_adv_to_ethtool_adv_t(u32 adv)
 {
         u32 result = 0;
@@ -547,15 +548,16 @@ static inline u32 mii_stat1000_to_ethtoo
 
         return result;
 }
+#endif /* if RHEL_MAJOR != 6 */
 
 #endif //LINUX_VERSION_CODE < KERNEL_VERSION(3,3,0)
 
-#if LINUX_VERSION_CODE < KERNEL_VERSION(3,4,0)
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,4,0) && RHEL_MAJOR != 6
 static inline void eth_hw_addr_random(struct net_device *dev)
 {
         random_ether_addr(dev->dev_addr);
 }
-#endif
+#endif /* if LINUX_VERSION_CODE < KERNEL_VERSION(3,4,0) && RHEL_MAJOR != 6 */
 
 #if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,0)
 #undef ethtool_ops
