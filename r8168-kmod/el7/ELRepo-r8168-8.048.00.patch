diff -Naurp r8168-8.048.00.orig/src/r8168.h r8168-8.048.00/src/r8168.h
--- r8168-8.048.00.orig/src/r8168.h	2019-11-26 12:31:43.000000000 +0000
+++ r8168-8.048.00/src/r8168.h	2020-03-01 10:28:49.170856015 +0000
@@ -44,7 +44,7 @@
 #define device_set_wakeup_enable(dev, val)	do {} while (0)
 #endif
 
-#if LINUX_VERSION_CODE < KERNEL_VERSION(3,14,0)
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,14,0) && RHEL_MAJOR != 7
 static inline void ether_addr_copy(u8 *dst, const u8 *src)
 {
         u16 *a = (u16 *)dst;
diff -Naurp r8168-8.048.00.orig/src/r8168_n.c r8168-8.048.00/src/r8168_n.c
--- r8168-8.048.00.orig/src/r8168_n.c	2019-11-26 08:32:35.000000000 +0000
+++ r8168-8.048.00/src/r8168_n.c	2020-03-01 10:40:31.995367616 +0000
@@ -459,7 +459,9 @@ static void rtl8168_set_rx_mode(struct n
 static void rtl8168_tx_timeout(struct net_device *dev);
 static struct net_device_stats *rtl8168_get_stats(struct net_device *dev);
 static int rtl8168_rx_interrupt(struct net_device *, struct rtl8168_private *, napi_budget);
+#if RHEL_MAJOR != 7
 static int rtl8168_change_mtu(struct net_device *dev, int new_mtu);
+#endif /* RHEL_MAJOR != 7 */
 static void rtl8168_down(struct net_device *dev);
 
 static int rtl8168_set_mac_address(struct net_device *dev, void *p);
@@ -25819,7 +25821,9 @@ static const struct net_device_ops rtl81
         .ndo_get_stats      = rtl8168_get_stats,
         .ndo_start_xmit     = rtl8168_start_xmit,
         .ndo_tx_timeout     = rtl8168_tx_timeout,
+#if RHEL_MAJOR != 7
         .ndo_change_mtu     = rtl8168_change_mtu,
+#endif /* RHEL_MAJOR != 7 */
         .ndo_set_mac_address    = rtl8168_set_mac_address,
         .ndo_do_ioctl       = rtl8168_do_ioctl,
 #if LINUX_VERSION_CODE < KERNEL_VERSION(3,1,0)
@@ -27395,7 +27399,7 @@ rtl8168_hw_start(struct net_device *dev)
         rtl8168_enable_hw_interrupt(tp);
 }
 
-
+#if RHEL_MAJOR != 7
 static int
 rtl8168_change_mtu(struct net_device *dev,
                    int new_mtu)
@@ -27454,6 +27458,7 @@ out:
 err_out:
         return ret;
 }
+#endif /* RHEL_MAJOR != 7 */
 
 static inline void
 rtl8168_make_unusable_by_asic(struct RxDesc *desc)
@@ -28535,9 +28540,9 @@ process_pkt:
 
                         if (rtl8168_rx_vlan_skb(tp, desc, skb) < 0)
                                 rtl8168_rx_skb(tp, skb);
-#if LINUX_VERSION_CODE < KERNEL_VERSION(4,11,0)
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4,11,0) && RHEL_MAJOR != 7
                         dev->last_rx = jiffies;
-#endif //LINUX_VERSION_CODE < KERNEL_VERSION(4,11,0)
+#endif //LINUX_VERSION_CODE < KERNEL_VERSION(4,11,0) && RHEL_MAJOR != 7 */
                         RTLDEV->stats.rx_bytes += pkt_size;
                         RTLDEV->stats.rx_packets++;
                 }
